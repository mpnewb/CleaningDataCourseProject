Step 1. Merges the training and the test sets to create one data set.

After reading the README file and features_info.txt file, I think the files in the directory "Inertial Signals" under 'test' and 'train' are irrelevant files. The data from these files is summarized in X_test, X_train files. 
Useful data files are: test/X_test.txt, test/y_test.txt, test/subject_test.txt, train/X_test.txt, train/y_train.txt, train/subject_train.txt,
activity_labels.txt, features.txt
Information files are: features_info.txt and README.txt

## reading the files
setwd("dataset/test")
x_test <- read.table("X_test.txt")
y_test <- read.table("y_test.txt")
subj_test <- read.table("subject_test.txt")

setwd("dataset/train")
x_train <- read.table( "X_train.txt" )
y_train <- read.table("y_train.txt" )
subj_train <- read.table("subject_train.txt")

## according to the README file, test data contains 30% of data and train contains 70% data. I checked the dimensions of the x_test,x_train and they both have the same variables, so combining the rows of both dataframes into one. Same with y_test, y_train and subj_test and subj_train.

## combine data sets 
x <- rbind(x_test, x_train)
y <- rbind(y_test, y_train)
subj <- rbind(subj_test, subj_train)

features <- read.table("features.txt" ) ## read from "features.txt"
----------------------------------------------------
> body_gyro_x <- read.table("body_gyro_x_test.txt")
> str(body_gyro_x)
'data.frame':   2947 obs. of  128 variables:
 $ V1  : num  0.4375 0.1703 -0.0387 -0.0101 -0.0367 ...

> body_acc_x <- read.table("body_acc_x_test.txt")
> dim(body_acc_x)
[1] 2947  128

> x_test <- read.table("X_test.txt")
> dim(x_test)
[1] 2947  561

> y_test <- read.table("y_test.txt")
> dim(y_test)
[1] 2947    1

> str(y_test)
'data.frame':   2947 obs. of  1 variable:
 $ V1: int  5 5 5 5 5 5 5 5 5 5 ...
> subj_test <- read.table("subject_test.txt")
> dim(subj_test)
[1] 2947    1

> str(subj_test)
'data.frame':   2947 obs. of  1 variable:
 $ V1: int  2 2 2 2 2 2 2 2 2 2 ...

> body_gyro_xtest <- read.table("body_gyro_x_test.txt" )
> body_gyro_ytest <- read.table("body_gyro_y_test.txt" )
> body_gyro_ztest <- read.table("body_gyro_z_test.txt" )
> body_acc_xtest <- read.table("body_acc_x_test.txt" )
> body_acc_ytest <- read.table("body_acc_y_test.txt" )
> body_acc_ztest <- read.table("body_acc_z_test.txt" )
> total_acc_xtest <- read.table("total_acc_x_test.txt" )
> total_acc_ytest <- read.table("total_acc_y_test.txt" )
> total_acc_ztest <- read.table("total_acc_z_test.txt" )

-----train-----------------------------
> x_train <- read.table( "X_train.txt" )
> dim(x_train)
[1] 7352  561

> y_train <- read.table("y_train.txt" )
> dim(y_train)
[1] 7352    1

> subj_train <- read.table("subject_train.txt")
> dim(subj_train)
[1] 7352    1

> body_gyro_xtrain <- read.table("body_gyro_x_train.txt" )
> dim(body_gyro_xt)
[1] 7352  128

> body_gyro_xtrain <- read.table("body_gyro_x_train.txt" )
> body_gyro_ytrain <- read.table("body_gyro_y_train.txt" )
> body_gyro_ztrain <- read.table("body_gyro_z_train.txt" )
> body_acc_xtrain <- read.table("body_acc_x_train.txt")
> body_acc_ytrain <- read.table("body_acc_y_train.txt")
> body_acc_ztrain <- read.table("body_acc_z_train.txt")
> total_acc_xtrain <- read.table("total_acc_x_train.txt")
> total_acc_ytrain <- read.table("total_acc_y_train.txt")
> total_acc_ztrain <- read.table("total_acc_z_train.txt")


====================================combined 12 data frames==================================
> x <- rbind(x_test, x_train)
> dim(x)
[1] 10299   561

> y <- rbind(y_test, y_train)
> dim(y)
[1] 10299     1

> subj <- rbind(subj_test, subj_train)
> dim(subj)
[1] 10299     1

> body_gyro_x <- rbind(body_gyro_xtest, body_gyro_xtrain)
> dim(body_gyro_x )
[1] 10299   128

> body_gyro_y <- rbind(body_gyro_ytest, body_gyro_ytrain)
> dim(body_gyro_y)
[1] 10299   128

> body_gyro_z <- rbind(body_gyro_ztest, body_gyro_ztrain)
> dim(body_gyro_z)
[1] 10299   128

> body_acc_x <- rbind(body_acc_xtest, body_acc_xtrain)
> dim(body_acc_x)
[1] 10299   128

> body_acc_y <- rbind(body_acc_ytest, body_acc_ytrain)
> body_acc_z <- rbind(body_acc_ztest, body_acc_ztrain)
> total_acc_z <- rbind(total_acc_ztest, total_acc_ztrain)
> total_acc_y <- rbind(total_acc_ytest, total_acc_ytrain)
> total_acc_x <- rbind(total_acc_xtest, total_acc_xtrain)


================================================================================================

- 'activity_labels.txt': Links the class labels with their activity name.

- 'train/y_train.txt': Training labels.

- 'test/y_test.txt': Test labels.
y is the combined dataframe for this

==================================================================================================
- 'train/subject_train.txt': Each row identifies the subject who performed the activity for each window sample. Its range is from 1 to 30.
subj is the combined dataframe 

====================================================================================================

Step 2. Extracts only the measurements on the mean and standard deviation for each measurement.


At this point data is in the three data frames, x, y and subj. x has the data from the experiment, y has the activities and subj has the subjects of the experiment.  
I think features.txt is the variables for the data in X_test.txt and X_train.txt. I read the features.txt and extract the names that match mean and std into two strings. Then I apply those names to x data frame and extract those from the x data frame. Finally combine the data frames, subj, y, two dataframes I extracted from x data frame.  


features_str <- as.character(features$V2)  ## get the second column of features data frame gives the string of names for variables

names(x) <- features_str  ## adding the variable names using features_str to data frame x
mean_str <- grep("mean", features_str) ## extract column names with mean
std_str <- grep(c("mean","std"), features_str) ## extract column names with std

data_mean <- x[,mean_str]  ## extract mean columns from data frame x
data_std <- x[,std_str]   ## extract std columns from data frame x
names(subj) <- "subjects" ## name the variable for subj dataframe
names(y) <- "activities"   ## name the variable for the activities dataframe y
data <- cbind(subj, y, data_mean, data_std)  ## combine columns from dataframes, subj, y, data_mean and data_std


====================================================================================================
Step 3.  Uses descriptive activity names to name the activities in the data set

Using recode from package, "car".
data$activities <- recode(data$activities, "1 = 'walking' ; 2 = 'walking_upstairs' ; 3 = 'walking_downstairs'; 4='sitting'; 5='standing'; 6 = 'laying'")

[1] "standing" "standing" "standing" "standing" "standing" "standing"
> tail(data$activities)
[1] "walking_upstairs" "walking_upstairs" "walking_upstairs" "walking_upstairs" "walking_upstairs" "walking_upstairs"

==================================================================================================
## Step 4. Appropriately labels the data set with descriptive variable names.
## At this point all the variables in data frame 'data' has descriptive variable names taken from features.txt 
## This was done in Step 2. I will remove "()" from the variable names here.
Step 4. Appropriately labels the data set with descriptive variable names.

> names(data) <- sub("\\)", "",names(data))
> names(data) <- sub("\\(", "",names(data))
> names(data)
 [1] "subjects"                      "activities"                    "tBodyAcc-mean-X"              
 [4] "tBodyAcc-mean-Y"               "tBodyAcc-mean-Z"               "tGravityAcc-mean-X"           
 [7] "tGravityAcc-mean-Y"            "tGravityAcc-mean-Z"            "tBodyAccJerk-mean-X"          
[10] "tBodyAccJerk-mean-Y"           "tBodyAccJerk-mean-Z"           "tBodyGyro-mean-X"             


==================================================================================================





